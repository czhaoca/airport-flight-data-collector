openapi: 3.0.3
info:
  title: Airport Flight Data Collector API
  description: |
    Comprehensive REST and GraphQL API for accessing flight data, predictions, and analytics.
    Features include real-time flight status, ML-based delay predictions, pattern detection,
    data export, webhook integrations, and advanced analytics for SFO, YYZ, and YVR airports.
  version: 2.5.0
  contact:
    name: API Support
    url: https://github.com/czhaoca/airport-flight-data-collector/issues
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3001/api/v2
    description: Development server
  - url: https://api.flightdata.example.com/v2
    description: Production server

security:
  - BearerAuth: []
  - ApiKeyAuth: []

tags:
  - name: Authentication
    description: Authentication endpoints
  - name: Flights
    description: Flight data operations
  - name: Airports
    description: Airport information
  - name: Statistics
    description: Statistical data and analytics
  - name: Predictions
    description: ML-based delay predictions and risk assessment
  - name: Patterns
    description: Pattern detection and operational insights
  - name: Export
    description: Data export in multiple formats
  - name: Webhooks
    description: Webhook management and event notifications
  - name: Batch
    description: Batch operations for bulk processing
  - name: Monitoring
    description: System metrics and monitoring endpoints
  - name: System
    description: System health and status

paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login to get JWT token
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: secretpassword
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /auth/refresh:
    post:
      tags:
        - Authentication
      summary: Refresh JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refreshToken
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /flights:
    get:
      tags:
        - Flights
      summary: Get flight data
      description: Retrieve flight data with various filters
      parameters:
        - $ref: '#/components/parameters/Airport'
        - $ref: '#/components/parameters/FlightType'
        - $ref: '#/components/parameters/StartDate'
        - $ref: '#/components/parameters/EndDate'
        - $ref: '#/components/parameters/Status'
        - $ref: '#/components/parameters/Airline'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Sort'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightListResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/RateLimitError'

  /flights/{id}:
    get:
      tags:
        - Flights
      summary: Get specific flight
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Flight ID
      responses:
        '200':
          description: Flight found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightDetailResponse'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /flights/search:
    post:
      tags:
        - Flights
      summary: Advanced flight search
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightSearchRequest'
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightListResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'

  /airports:
    get:
      tags:
        - Airports
      summary: Get supported airports
      responses:
        '200':
          description: List of airports
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirportListResponse'

  /airports/{code}:
    get:
      tags:
        - Airports
      summary: Get airport details
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
            pattern: '^[A-Z]{3}$'
          description: IATA airport code
      responses:
        '200':
          description: Airport details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirportDetailResponse'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /statistics/summary:
    get:
      tags:
        - Statistics
      summary: Get flight statistics summary
      parameters:
        - $ref: '#/components/parameters/Period'
        - $ref: '#/components/parameters/Airport'
      responses:
        '200':
          description: Statistics summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsSummaryResponse'

  /statistics/delays:
    get:
      tags:
        - Statistics
      summary: Get delay statistics
      parameters:
        - $ref: '#/components/parameters/Period'
        - $ref: '#/components/parameters/Airport'
        - $ref: '#/components/parameters/Airline'
      responses:
        '200':
          description: Delay statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelayStatisticsResponse'

  /predictions/delay:
    post:
      tags:
        - Predictions
      summary: Predict delay for a flight
      description: Get ML-based delay prediction for a specific flight
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DelayPredictionRequest'
      responses:
        '200':
          description: Delay prediction generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelayPredictionResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /predictions/batch:
    post:
      tags:
        - Predictions
      summary: Batch delay predictions
      description: Get delay predictions for multiple flights at once
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPredictionRequest'
      responses:
        '200':
          description: Batch predictions generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPredictionResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /predictions/upcoming:
    get:
      tags:
        - Predictions
      summary: Get predictions for upcoming flights
      description: Retrieve delay predictions for flights in the next few hours
      parameters:
        - $ref: '#/components/parameters/Airport'
        - name: hours
          in: query
          description: Number of hours ahead to look
          schema:
            type: integer
            minimum: 1
            maximum: 24
            default: 6
        - name: minRisk
          in: query
          description: Minimum risk level to include
          schema:
            type: string
            enum: [low, medium, high]
      responses:
        '200':
          description: Upcoming flight predictions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpcomingPredictionsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /predictions/high-risk:
    get:
      tags:
        - Predictions
      summary: Get high-risk flight alerts
      description: Retrieve flights with high delay probability
      parameters:
        - $ref: '#/components/parameters/Airport'
        - name: threshold
          in: query
          description: Minimum delay probability threshold
          schema:
            type: number
            minimum: 0.5
            maximum: 1.0
            default: 0.8
      responses:
        '200':
          description: High-risk flight alerts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HighRiskAlertsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /predictions/metrics:
    get:
      tags:
        - Predictions
      summary: Get model performance metrics
      description: Retrieve ML model accuracy and performance statistics
      responses:
        '200':
          description: Model performance metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelMetricsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /patterns:
    get:
      tags:
        - Patterns
      summary: Get detected patterns
      description: Retrieve currently detected operational patterns
      parameters:
        - name: refresh
          in: query
          description: Force refresh of pattern analysis
          schema:
            type: boolean
            default: false
        - name: type
          in: query
          description: Filter by pattern type
          schema:
            type: string
            enum: [temporal, spatial, operational, anomaly, cascading, seasonal]
      responses:
        '200':
          description: Current patterns
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatternsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /patterns/summary:
    get:
      tags:
        - Patterns
      summary: Get pattern analysis summary
      description: High-level summary of detected patterns and insights
      responses:
        '200':
          description: Pattern analysis summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatternSummaryResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /patterns/type/{type}:
    get:
      tags:
        - Patterns
      summary: Get patterns by type
      description: Retrieve patterns of a specific type
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum: [temporal, spatial, operational, anomaly, cascading, seasonal]
          description: Pattern type
      responses:
        '200':
          description: Patterns of specified type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatternsByTypeResponse'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /patterns/insights:
    get:
      tags:
        - Patterns
      summary: Get actionable insights
      description: Retrieve actionable insights from pattern analysis
      responses:
        '200':
          description: Actionable insights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatternInsightsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /patterns/alerts:
    get:
      tags:
        - Patterns
      summary: Get real-time pattern alerts
      description: Retrieve active pattern-based alerts
      responses:
        '200':
          description: Active pattern alerts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatternAlertsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /patterns/analyze:
    post:
      tags:
        - Patterns
      summary: Custom pattern analysis
      description: Analyze patterns for a custom date range
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatternAnalysisRequest'
      responses:
        '200':
          description: Custom pattern analysis results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatternAnalysisResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /export/flights:
    get:
      tags:
        - Export
      summary: Export flight data
      description: Export flight data in various formats
      parameters:
        - $ref: '#/components/parameters/Airport'
        - $ref: '#/components/parameters/StartDate'
        - $ref: '#/components/parameters/EndDate'
        - name: format
          in: query
          description: Export format
          schema:
            type: string
            enum: [json, csv, parquet]
            default: json
        - name: fields
          in: query
          description: Comma-separated list of fields to include
          schema:
            type: string
            example: 'flightNumber,airline,status,delay'
      responses:
        '200':
          description: Flight data export
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportResponse'
            text/csv:
              schema:
                type: string
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /export/statistics:
    get:
      tags:
        - Export
      summary: Export statistics
      description: Export statistical summaries and analytics
      parameters:
        - $ref: '#/components/parameters/Period'
        - $ref: '#/components/parameters/Airport'
        - name: format
          in: query
          description: Export format
          schema:
            type: string
            enum: [json, csv]
            default: json
      responses:
        '200':
          description: Statistics export
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsExportResponse'
            text/csv:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /webhooks:
    get:
      tags:
        - Webhooks
      summary: List webhooks
      description: Get all registered webhooks for the authenticated user
      responses:
        '200':
          description: List of webhooks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookListResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    post:
      tags:
        - Webhooks
      summary: Create webhook
      description: Register a new webhook for event notifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookCreateRequest'
      responses:
        '201':
          description: Webhook created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /webhooks/{id}:
    get:
      tags:
        - Webhooks
      summary: Get webhook details
      description: Retrieve details of a specific webhook
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Webhook ID
      responses:
        '200':
          description: Webhook details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    put:
      tags:
        - Webhooks
      summary: Update webhook
      description: Update an existing webhook configuration
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Webhook ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookUpdateRequest'
      responses:
        '200':
          description: Webhook updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    delete:
      tags:
        - Webhooks
      summary: Delete webhook
      description: Remove a webhook registration
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Webhook ID
      responses:
        '204':
          description: Webhook deleted successfully
        '404':
          $ref: '#/components/responses/NotFoundError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /batch:
    post:
      tags:
        - Batch
      summary: Execute batch operations
      description: Perform multiple operations in a single request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
      responses:
        '200':
          description: Batch operations completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /metrics:
    get:
      tags:
        - Monitoring
      summary: Get system metrics
      description: Retrieve system performance and usage metrics
      responses:
        '200':
          description: System metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemMetricsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /websocket/stats:
    get:
      tags:
        - Monitoring
      summary: Get WebSocket statistics
      description: Retrieve WebSocket connection and usage statistics
      responses:
        '200':
          description: WebSocket statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebSocketStatsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /health:
    get:
      tags:
        - System
      summary: Health check
      security: []
      responses:
        '200':
          description: System is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '503':
          description: System is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

  parameters:
    Airport:
      name: airport
      in: query
      description: Filter by airport code
      schema:
        type: string
        enum: [SFO, YYZ, YVR]
    
    FlightType:
      name: type
      in: query
      description: Filter by flight type
      schema:
        type: string
        enum: [arrival, departure]
    
    StartDate:
      name: startDate
      in: query
      description: Start date (inclusive)
      schema:
        type: string
        format: date
        example: '2025-01-01'
    
    EndDate:
      name: endDate
      in: query
      description: End date (inclusive)
      schema:
        type: string
        format: date
        example: '2025-01-31'
    
    Status:
      name: status
      in: query
      description: Filter by flight status
      schema:
        type: string
        enum: [ON_TIME, DELAYED, CANCELLED, DEPARTED, ARRIVED, BOARDING]
    
    Airline:
      name: airline
      in: query
      description: Filter by airline code
      schema:
        type: string
        example: 'UA'
    
    Limit:
      name: limit
      in: query
      description: Maximum number of results
      schema:
        type: integer
        minimum: 1
        maximum: 1000
        default: 100
    
    Offset:
      name: offset
      in: query
      description: Number of results to skip
      schema:
        type: integer
        minimum: 0
        default: 0
    
    Sort:
      name: sort
      in: query
      description: Sort order
      schema:
        type: string
        enum: [scheduledTime, actualTime, flightNumber, status]
        default: scheduledTime
    
    Period:
      name: period
      in: query
      description: Time period for statistics
      schema:
        type: string
        enum: [24h, 7d, 30d, 90d, 1y]
        default: 7d

  schemas:
    AuthResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: JWT access token
        refreshToken:
          type: string
          description: JWT refresh token
        expiresIn:
          type: integer
          description: Token expiration time in seconds
        tokenType:
          type: string
          default: Bearer

    Flight:
      type: object
      properties:
        id:
          type: string
          description: Unique flight identifier
        flightNumber:
          type: string
          example: 'UA123'
        airline:
          $ref: '#/components/schemas/Airline'
        origin:
          type: string
          example: 'LAX'
        destination:
          type: string
          example: 'SFO'
        scheduledTime:
          type: string
          format: date-time
        actualTime:
          type: string
          format: date-time
          nullable: true
        estimatedTime:
          type: string
          format: date-time
          nullable: true
        status:
          type: string
          enum: [ON_TIME, DELAYED, CANCELLED, DEPARTED, ARRIVED, BOARDING]
        gate:
          type: string
          nullable: true
        terminal:
          type: string
          nullable: true
        type:
          type: string
          enum: [arrival, departure]
        aircraft:
          type: string
          nullable: true
        delay:
          type: integer
          description: Delay in minutes
          nullable: true

    Airline:
      type: object
      properties:
        code:
          type: string
          example: 'UA'
        name:
          type: string
          example: 'United Airlines'

    Airport:
      type: object
      properties:
        code:
          type: string
          example: 'SFO'
        name:
          type: string
          example: 'San Francisco International Airport'
        city:
          type: string
          example: 'San Francisco'
        country:
          type: string
          example: 'USA'
        timezone:
          type: string
          example: 'America/Los_Angeles'
        coordinates:
          type: object
          properties:
            latitude:
              type: number
              format: float
            longitude:
              type: number
              format: float

    FlightListResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/Flight'
        pagination:
          $ref: '#/components/schemas/Pagination'
        meta:
          $ref: '#/components/schemas/ResponseMeta'

    FlightDetailResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/Flight'
        meta:
          $ref: '#/components/schemas/ResponseMeta'

    FlightSearchRequest:
      type: object
      properties:
        airports:
          type: array
          items:
            type: string
        types:
          type: array
          items:
            type: string
            enum: [arrival, departure]
        dateRange:
          type: object
          properties:
            start:
              type: string
              format: date
            end:
              type: string
              format: date
        flightNumbers:
          type: array
          items:
            type: string
        airlines:
          type: array
          items:
            type: string
        statuses:
          type: array
          items:
            type: string

    AirportListResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/Airport'

    AirportDetailResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/Airport'

    StatisticsSummaryResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            period:
              type: string
            totalFlights:
              type: integer
            byAirport:
              type: object
              additionalProperties:
                type: object
                properties:
                  total:
                    type: integer
                  arrivals:
                    type: integer
                  departures:
                    type: integer
            byStatus:
              type: object
              additionalProperties:
                type: integer
            byDate:
              type: object
              additionalProperties:
                type: integer

    DelayStatisticsResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            period:
              type: string
            averageDelay:
              type: number
              format: float
              description: Average delay in minutes
            delaysByHour:
              type: object
              additionalProperties:
                type: number
            delaysByAirline:
              type: object
              additionalProperties:
                type: object
                properties:
                  count:
                    type: integer
                  averageDelay:
                    type: number

    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, unhealthy]
        version:
          type: string
        uptime:
          type: number
        database:
          type: object
          properties:
            connected:
              type: boolean
            provider:
              type: string
        services:
          type: object
          additionalProperties:
            type: object
            properties:
              status:
                type: string
              lastCheck:
                type: string
                format: date-time

    Pagination:
      type: object
      properties:
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
        hasNext:
          type: boolean
        hasPrev:
          type: boolean

    ResponseMeta:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        requestId:
          type: string
        cached:
          type: boolean
          default: false

    DelayPredictionRequest:
      type: object
      required:
        - scheduledTime
        - airline
        - origin
      properties:
        flightNumber:
          type: string
          example: 'UA123'
        airline:
          type: string
          example: 'UA'
        origin:
          type: string
          example: 'SFO'
        destination:
          type: string
          example: 'LAX'
        scheduledTime:
          type: string
          format: date-time
          example: '2025-08-02T08:00:00Z'
        aircraft:
          type: string
          example: 'B737'
        gate:
          type: string
          example: 'A12'
    
    DelayPredictionResponse:
      type: object
      properties:
        success:
          type: boolean
        prediction:
          type: object
          properties:
            delayProbability:
              type: number
              format: float
              minimum: 0
              maximum: 1
              description: Probability of delay (0-1)
            expectedDelayMinutes:
              type: integer
              minimum: 0
              description: Expected delay in minutes
            riskLevel:
              type: string
              enum: [low, medium, high]
            confidence:
              type: number
              format: float
              minimum: 0
              maximum: 1
            factors:
              type: array
              items:
                type: object
                properties:
                  factor:
                    type: string
                  impact:
                    type: number
                    format: float
                  description:
                    type: string

    BatchPredictionRequest:
      type: object
      required:
        - flights
      properties:
        flights:
          type: array
          items:
            $ref: '#/components/schemas/DelayPredictionRequest'
          maxItems: 100

    BatchPredictionResponse:
      type: object
      properties:
        success:
          type: boolean
        predictions:
          type: array
          items:
            type: object
            properties:
              flightId:
                type: string
              prediction:
                $ref: '#/components/schemas/DelayPredictionResponse/properties/prediction'
              error:
                type: string
                nullable: true

    UpcomingPredictionsResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            type: object
            properties:
              flight:
                $ref: '#/components/schemas/Flight'
              prediction:
                $ref: '#/components/schemas/DelayPredictionResponse/properties/prediction'
        meta:
          type: object
          properties:
            totalFlights:
              type: integer
            timeRange:
              type: string
            generatedAt:
              type: string
              format: date-time

    HighRiskAlertsResponse:
      type: object
      properties:
        success:
          type: boolean
        alerts:
          type: array
          items:
            type: object
            properties:
              flight:
                $ref: '#/components/schemas/Flight'
              prediction:
                $ref: '#/components/schemas/DelayPredictionResponse/properties/prediction'
              alertLevel:
                type: string
                enum: [warning, critical]
              message:
                type: string

    ModelMetricsResponse:
      type: object
      properties:
        success:
          type: boolean
        metrics:
          type: object
          properties:
            accuracy:
              type: number
              format: float
            precision:
              type: number
              format: float
            recall:
              type: number
              format: float
            f1Score:
              type: number
              format: float
            lastTrainingDate:
              type: string
              format: date
            trainingDataSize:
              type: integer
            featuresUsed:
              type: array
              items:
                type: string

    PatternsResponse:
      type: object
      properties:
        success:
          type: boolean
        patterns:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum: [temporal, spatial, operational, anomaly, cascading, seasonal]
              title:
                type: string
              description:
                type: string
              severity:
                type: string
                enum: [low, medium, high]
              confidence:
                type: number
                format: float
              startDate:
                type: string
                format: date
              endDate:
                type: string
                format: date
              affectedFlights:
                type: integer
              impact:
                type: object
                properties:
                  averageDelay:
                    type: number
                  cancellationRate:
                    type: number

    PatternSummaryResponse:
      type: object
      properties:
        success:
          type: boolean
        summary:
          type: object
          properties:
            totalPatterns:
              type: integer
            byType:
              type: object
              additionalProperties:
                type: integer
            bySeverity:
              type: object
              additionalProperties:
                type: integer
            recentTrends:
              type: array
              items:
                type: string
            recommendedActions:
              type: array
              items:
                type: string

    PatternsByTypeResponse:
      type: object
      properties:
        success:
          type: boolean
        type:
          type: string
        patterns:
          type: array
          items:
            $ref: '#/components/schemas/PatternsResponse/properties/patterns/items'

    PatternInsightsResponse:
      type: object
      properties:
        success:
          type: boolean
        insights:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
              description:
                type: string
              priority:
                type: string
                enum: [low, medium, high]
              actionable:
                type: boolean
              recommendation:
                type: string
              estimatedImpact:
                type: string

    PatternAlertsResponse:
      type: object
      properties:
        success:
          type: boolean
        alerts:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
              message:
                type: string
              severity:
                type: string
                enum: [warning, critical]
              timestamp:
                type: string
                format: date-time
              affectedAirports:
                type: array
                items:
                  type: string

    PatternAnalysisRequest:
      type: object
      required:
        - startDate
        - endDate
      properties:
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        airports:
          type: array
          items:
            type: string
        analysisTypes:
          type: array
          items:
            type: string
            enum: [temporal, spatial, operational, anomaly, cascading, seasonal]

    PatternAnalysisResponse:
      type: object
      properties:
        success:
          type: boolean
        analysis:
          type: object
          properties:
            period:
              type: object
              properties:
                start:
                  type: string
                  format: date
                end:
                  type: string
                  format: date
            patterns:
              $ref: '#/components/schemas/PatternsResponse/properties/patterns'
            summary:
              $ref: '#/components/schemas/PatternSummaryResponse/properties/summary'
            insights:
              $ref: '#/components/schemas/PatternInsightsResponse/properties/insights'

    ExportResponse:
      type: object
      properties:
        success:
          type: boolean
        exportId:
          type: string
        downloadUrl:
          type: string
        format:
          type: string
        recordCount:
          type: integer
        fileSize:
          type: integer
          description: File size in bytes
        expiresAt:
          type: string
          format: date-time

    StatisticsExportResponse:
      type: object
      properties:
        success:
          type: boolean
        exportId:
          type: string
        downloadUrl:
          type: string
        format:
          type: string
        categories:
          type: array
          items:
            type: string
        period:
          type: string
        expiresAt:
          type: string
          format: date-time

    WebhookListResponse:
      type: object
      properties:
        success:
          type: boolean
        webhooks:
          type: array
          items:
            $ref: '#/components/schemas/WebhookResponse/properties/webhook'
        pagination:
          $ref: '#/components/schemas/Pagination'

    WebhookCreateRequest:
      type: object
      required:
        - url
        - events
      properties:
        url:
          type: string
          format: uri
          example: 'https://your-app.com/webhook'
        events:
          type: array
          items:
            type: string
            enum: [flight.delayed, flight.cancelled, flight.status_changed, pattern.detected, prediction.high_risk]
          minItems: 1
        filters:
          type: object
          properties:
            airports:
              type: array
              items:
                type: string
            airlines:
              type: array
              items:
                type: string
            minDelay:
              type: integer
              minimum: 0
        active:
          type: boolean
          default: true
        description:
          type: string

    WebhookUpdateRequest:
      type: object
      properties:
        url:
          type: string
          format: uri
        events:
          type: array
          items:
            type: string
        filters:
          type: object
          properties:
            airports:
              type: array
              items:
                type: string
            airlines:
              type: array
              items:
                type: string
            minDelay:
              type: integer
        active:
          type: boolean
        description:
          type: string

    WebhookResponse:
      type: object
      properties:
        success:
          type: boolean
        webhook:
          type: object
          properties:
            id:
              type: string
            url:
              type: string
            events:
              type: array
              items:
                type: string
            filters:
              type: object
            active:
              type: boolean
            description:
              type: string
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            lastTriggered:
              type: string
              format: date-time
              nullable: true
            deliveryStats:
              type: object
              properties:
                totalDeliveries:
                  type: integer
                successfulDeliveries:
                  type: integer
                failedDeliveries:
                  type: integer
                lastSuccess:
                  type: string
                  format: date-time
                  nullable: true
                lastFailure:
                  type: string
                  format: date-time
                  nullable: true

    BatchRequest:
      type: object
      required:
        - operations
      properties:
        operations:
          type: array
          items:
            type: object
            required:
              - operation
              - path
            properties:
              operation:
                type: string
                enum: [GET, POST, PUT, DELETE]
              path:
                type: string
                example: '/flights?airport=SFO&limit=10'
              body:
                type: object
                nullable: true
              id:
                type: string
                description: Optional ID to correlate request with response
          maxItems: 100

    BatchResponse:
      type: object
      properties:
        success:
          type: boolean
        results:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                nullable: true
              status:
                type: integer
              response:
                type: object
              error:
                type: string
                nullable: true
        summary:
          type: object
          properties:
            totalOperations:
              type: integer
            successfulOperations:
              type: integer
            failedOperations:
              type: integer

    SystemMetricsResponse:
      type: object
      properties:
        success:
          type: boolean
        metrics:
          type: object
          properties:
            api:
              type: object
              properties:
                requestsPerMinute:
                  type: number
                averageResponseTime:
                  type: number
                errorRate:
                  type: number
                activeConnections:
                  type: integer
            database:
              type: object
              properties:
                connectionPoolSize:
                  type: integer
                activeConnections:
                  type: integer
                queryTime:
                  type: number
            predictions:
              type: object
              properties:
                predictionsPerHour:
                  type: integer
                averagePredictionTime:
                  type: number
                modelAccuracy:
                  type: number
            patterns:
              type: object
              properties:
                patternsDetected:
                  type: integer
                lastAnalysisTime:
                  type: string
                  format: date-time
            system:
              type: object
              properties:
                cpuUsage:
                  type: number
                memoryUsage:
                  type: number
                diskUsage:
                  type: number
                uptime:
                  type: integer

    WebSocketStatsResponse:
      type: object
      properties:
        success:
          type: boolean
        stats:
          type: object
          properties:
            activeConnections:
              type: integer
            totalConnections:
              type: integer
            messagesPerMinute:
              type: number
            subscriptionsByType:
              type: object
              additionalProperties:
                type: integer
            connectionsByRoom:
              type: object
              additionalProperties:
                type: integer
            averageConnectionDuration:
              type: number
              description: Average connection duration in seconds

    Error:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
        message:
          type: string
        details:
          type: object

  responses:
    BadRequestError:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: BAD_REQUEST
            message: Invalid date format
    
    UnauthorizedError:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: UNAUTHORIZED
            message: Invalid or missing authentication token
    
    NotFoundError:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: NOT_FOUND
            message: Flight not found
    
    RateLimitError:
      description: Rate limit exceeded
      headers:
        X-RateLimit-Limit:
          description: Request limit per window
          schema:
            type: integer
        X-RateLimit-Remaining:
          description: Remaining requests in window
          schema:
            type: integer
        X-RateLimit-Reset:
          description: Time when rate limit resets
          schema:
            type: integer
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: RATE_LIMIT_EXCEEDED
            message: Too many requests. Please try again later.